[gd_scene load_steps=18 format=2]

[ext_resource path="res://level.gd" type="Script" id=1]
[ext_resource path="res://starfield_2.png" type="Texture" id=2]
[ext_resource path="res://player.tscn" type="PackedScene" id=3]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform sampler2D noise;
uniform sampler2D noise2;

void fragment(){
	vec4 starColor = vec4(1.0,1.0,1.0,1.0);
	float starSpeed = 5.0;
	float starVariance = 1.0;
	vec2 newUV = UV;
	newUV.x += sin(TIME*0.002);
	newUV.y += cos(TIME*0.002);
	vec4 normal = texture(noise, newUV);
	COLOR = normal;
	COLOR = texture(TEXTURE, UV);
	
	if(COLOR.r + normal.r >  0.75){
		COLOR = starColor * (1.0 - (starSpeed+1.0)*starVariance*0.5);
	}else{
	//	else if(COLOR.r + normal.r >  0.65){
	//		COLOR = vec4(0.2,0.2,1.0,0.2);
	//	}
		vec2 newUV2 = UV;
		newUV2.x -= sin(TIME*0.005);
		newUV2.y -= cos(TIME*0.005);
		vec4 normal_2 = texture(noise2, newUV2);
		if(normal_2.r + normal.r < 0.75){
			COLOR.g = (0.75 - (normal.r + normal_2.r)) * 1.8;
			COLOR.b = (0.75 - (normal.r + normal_2.r)) * 2.0;
		}
		if(normal_2.r + normal.r > 1.25){
			COLOR.r = ((normal.r + normal_2.r) - 1.25) * 1.8;
			COLOR.b = ((normal.r + normal_2.r) - 1.25) * 2.0;
		}
	//	if(COLOR.r == 0.0){
	//		COLOR.a = 0.0;	
	}
		
		COLOR.r += 0.02;
		COLOR.b += 0.035;
}"

[sub_resource type="OpenSimplexNoise" id=2]
persistence = 1.0
lacunarity = 4.0

[sub_resource type="NoiseTexture" id=3]
seamless = true
noise = SubResource( 2 )

[sub_resource type="OpenSimplexNoise" id=4]
octaves = 6
persistence = 0.25
lacunarity = 4.0

[sub_resource type="NoiseTexture" id=5]
seamless = true
noise = SubResource( 4 )

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 1 )
shader_param/noise = SubResource( 3 )
shader_param/noise2 = SubResource( 5 )

[sub_resource type="Shader" id=7]
code = "shader_type canvas_item;

uniform sampler2D noise;

void fragment(){
	COLOR = texture(TEXTURE, UV);
//	COLOR.r = 1.0;
//	if(COLOR.r < 0.75){
//		COLOR.a = 0.0;
//	}else if(COLOR.r < 0.8){
//		COLOR.a = 0.2;
//	}else{
//		COLOR = vec4(1.0,1.0,1.0,1.0)	
//	}
	if(COLOR.r < 0.76){
		COLOR.a = 0.0;
	}else{
		float fade = ((COLOR.r -0.76)/0.24);
		COLOR = vec4(1.0,1.0,1.0,1.0);
		COLOR.a = fade;
		
	}

	
	vec4 starColor = vec4(1.0,1.0,1.0,1.0);
	float starSpeed = 5.0;
	float starVariance = 1.0;
	vec2 newUV = UV;
	newUV.x += sin(TIME*0.05);
	newUV.y += cos(TIME*0.05);
	vec4 normal = texture(noise, newUV);
//	COLOR = normal;
//	COLOR = texture(TEXTURE, UV);
	if(COLOR.a >=0.01){
		if(COLOR.a + normal.r >  0.6){
			COLOR = starColor * (1.0 - (starSpeed+1.0)*starVariance*0.5);
		}else{
			COLOR.a = 0.0;	
		}
		
//		if(COLOR.r == 0.0){
//			COLOR.a = 0.0;	
//		}
	}
}
"

[sub_resource type="OpenSimplexNoise" id=8]
seed = -1

[sub_resource type="NoiseTexture" id=9]
width = 1000
height = 1000
noise = SubResource( 8 )

[sub_resource type="ShaderMaterial" id=10]
shader = SubResource( 7 )
shader_param/noise = SubResource( 9 )

[sub_resource type="OpenSimplexNoise" id=11]
seed = 1
octaves = 4
persistence = 1.0

[sub_resource type="NoiseTexture" id=12]
width = 1000
height = 1000
noise = SubResource( 11 )

[sub_resource type="OpenSimplexNoise" id=13]
seed = 3
octaves = 4
persistence = 1.0

[sub_resource type="NoiseTexture" id=14]
width = 1000
height = 1000
noise = SubResource( 13 )

[node name="Node2D" type="Node2D"]
script = ExtResource( 1 )

[node name="ParallaxBackground" type="ParallaxBackground" parent="."]

[node name="ParallaxLayer" type="ParallaxLayer" parent="ParallaxBackground"]
motion_scale = Vector2( 0.1, 0.1 )

[node name="backdrop" type="Sprite" parent="ParallaxBackground/ParallaxLayer"]
material = SubResource( 6 )
texture = ExtResource( 2 )

[node name="ParallaxLayer2" type="ParallaxLayer" parent="ParallaxBackground"]
motion_scale = Vector2( 0.15, 0.15 )

[node name="star_layer_1" type="Sprite" parent="ParallaxBackground/ParallaxLayer2"]
material = SubResource( 10 )
texture = SubResource( 12 )

[node name="ParallaxLayer3" type="ParallaxLayer" parent="ParallaxBackground"]
motion_scale = Vector2( 0.2, 0.2 )

[node name="star_layer_2" type="Sprite" parent="ParallaxBackground/ParallaxLayer3"]
material = SubResource( 10 )
texture = SubResource( 14 )

[node name="Node2D" parent="." instance=ExtResource( 3 )]

[node name="Timer" type="Timer" parent="."]
autostart = true

[connection signal="timeout" from="Timer" to="." method="_on_Timer_timeout"]
